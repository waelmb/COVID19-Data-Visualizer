#pragma checksum "/home/codio/workspace/covid-web/Views/Task4.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1212b9f96b9e0269f39460464b04711cc86cadbc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(program.Pages.Views_Task4), @"mvc.1.0.razor-page", @"/Views/Task4.cshtml")]
namespace program.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/codio/workspace/covid-web/Views/_ViewImports.cshtml"
using program;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1212b9f96b9e0269f39460464b04711cc86cadbc", @"/Views/Task4.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"65a87352ab55936b7625448d2e9155e1658af919", @"/Views/_ViewImports.cshtml")]
    public class Views_Task4 : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "/home/codio/workspace/covid-web/Views/Task4.cshtml"
  
  var step2FormattedDates = Newtonsoft.Json.JsonConvert.SerializeObject(Model.step2FormattedDates);
  var totalsDataset = Newtonsoft.Json.JsonConvert.SerializeObject(Model.totalsDataset);
  var testDataset = Newtonsoft.Json.JsonConvert.SerializeObject(Model.testDataset);
  var eventsDataStructureOriginal = Newtonsoft.Json.JsonConvert.SerializeObject(Model.eventsDataStructure);
  ViewData["Title"] = "State Information";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h2>Task 4</h2>  
<br />
<p>4. Last, combine US COVID Data and US Mitigation Databy implementing a graph with total cases (total) of a state and by using marker points to find any news (DescriptionOfMeasure) for that day for that particular state. Proper legends are to be present.</p>
<br />
Your search string: """);
#nullable restore
#line 15 "/home/codio/workspace/covid-web/Views/Task4.cshtml"
                Write(Model.Input);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"\n<br />\n# of dates found: ");
#nullable restore
#line 17 "/home/codio/workspace/covid-web/Views/Task4.cshtml"
             Write(Model.CountDates);

#line default
#line hidden
#nullable disable
            WriteLiteral("\n<br />\n# of total mitigations found: ");
#nullable restore
#line 19 "/home/codio/workspace/covid-web/Views/Task4.cshtml"
                         Write(Model.CountNews);

#line default
#line hidden
#nullable disable
            WriteLiteral("\n<br />\n# of mitigations within cases reported found: ");
#nullable restore
#line 21 "/home/codio/workspace/covid-web/Views/Task4.cshtml"
                                         Write(Model.CountNewsWithin);

#line default
#line hidden
#nullable disable
            WriteLiteral("\n<br />\n<br />\n<p>Hover over data points to see the news for that specific date.</p>\n<br/>\n");
#nullable restore
#line 26 "/home/codio/workspace/covid-web/Views/Task4.cshtml"
  
   if (@Model.EX != null)
	 {

#line default
#line hidden
#nullable disable
            WriteLiteral("\t\t <h3>**ERROR: ");
#nullable restore
#line 29 "/home/codio/workspace/covid-web/Views/Task4.cshtml"
                 Write(Model.EX.Message);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h3>\n\t\t <br />\n\t\t <hr />\n\t\t <br />\n\t\t <br />\n");
#nullable restore
#line 34 "/home/codio/workspace/covid-web/Views/Task4.cshtml"
	 }

#line default
#line hidden
#nullable disable
            WriteLiteral("\n<div class=\"box-body\">  \n  <div class=\"chart-container\">  \n     <canvas id=\"myChart\"></canvas>  \n  </div>  \n</div>  \n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.bundle.min.js\"></script>\n\n<script>\nvar datesArray = ");
#nullable restore
#line 46 "/home/codio/workspace/covid-web/Views/Task4.cshtml"
            Write(Html.Raw(step2FormattedDates));

#line default
#line hidden
#nullable disable
            WriteLiteral("\nvar eventsDataStructure = ");
#nullable restore
#line 47 "/home/codio/workspace/covid-web/Views/Task4.cshtml"
                     Write(Html.Raw(eventsDataStructureOriginal));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
var index = 0
console.log(eventsDataStructure)

var ctx = document.getElementById(""myChart"");
var myChart = new Chart(ctx, {
    type: 'line',
    data: {
        labels: datesArray,
        datasets: [
        {
            label: 'Total Cases',  
            data: ");
#nullable restore
#line 59 "/home/codio/workspace/covid-web/Views/Task4.cshtml"
             Write(Html.Raw(totalsDataset));

#line default
#line hidden
#nullable disable
            WriteLiteral(@",
            borderColor: ""blue"",
            pointBackgroundColor: ""black"",
            borderWidth: 1
        }
        ]
    },
    options: {
        title: {
            display: true,
            text: 'Total Cases and Mitagations Over Dates For ' + '");
#nullable restore
#line 69 "/home/codio/workspace/covid-web/Views/Task4.cshtml"
                                                              Write(Model.stateName);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"'
        },
        scales: {
            xAxes: [{
                scaleLabel: {
                  display: true,
                  labelString: 'Dates',
                  beginAtZero:true
                }
            }],
            yAxes: [{
                scaleLabel: {
                  display: true,
                  labelString: 'Total Cases',
                  beginAtZero:true
                }
            }]
        },
        tooltips: {
                  enabled: true,
                  mode: 'single',
                  callbacks: {
                           label: function (tooltipItems, data) {
                                console.log('tooltipItems: ')
                                console.log(tooltipItems)
                                console.log('data: ' + data)
                                console.log(data)
                                return  ""Total Cases: "" + tooltipItems.yLabel;
                           },
                          afterLabel: function(tooltipItem, data)");
            WriteLiteral(" {\n                            return eventsDataStructure[datesArray.indexOf(tooltipItem.xLabel)];\n                          }\n                  }\n         }\n    }\n});\n\n</script>\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Task4Model> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Task4Model> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Task4Model>)PageContext?.ViewData;
        public Task4Model Model => ViewData.Model;
    }
}
#pragma warning restore 1591
